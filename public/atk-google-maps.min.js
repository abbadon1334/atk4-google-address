!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("atk"),require("jQuery")):"function"==typeof define&&define.amd?define("atk.google.maps",["atk","jQuery"],e):"object"==typeof exports?exports["atk.google.maps"]=e(require("atk"),require("jQuery")):t["atk.google.maps"]=e(t.atk,t.jQuery)}(self,(function(t,e){return(()=>{"use strict";var i={952:e=>{e.exports=t},145:t=>{t.exports=e}},s={};function o(t){var e=s[t];if(void 0!==e)return e.exports;var r=s[t]={exports:{}};return i[t](r,r.exports,o),r.exports}o.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return o.d(e,{a:e}),e},o.d=(t,e)=>{for(var i in e)o.o(e,i)&&!o.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},o.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var r={};return(()=>{var t=o(952),e=o.n(t),i=function t(e,i){if(e===i)return!0;if(e&&i&&"object"==typeof e&&"object"==typeof i){if(e.constructor!==i.constructor)return!1;var s,o,r;if(Array.isArray(e)){if((s=e.length)!=i.length)return!1;for(o=s;0!=o--;)if(!t(e[o],i[o]))return!1;return!0}if(e.constructor===RegExp)return e.source===i.source&&e.flags===i.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===i.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===i.toString();if((s=(r=Object.keys(e)).length)!==Object.keys(i).length)return!1;for(o=s;0!=o--;)if(!Object.prototype.hasOwnProperty.call(i,r[o]))return!1;for(o=s;0!=o--;){var n=r[o];if(!t(e[n],i[n]))return!1}return!0}return e!=e&&i!=i};const s="__googleMapsScriptId";class r{constructor({apiKey:t,channel:e,client:o,id:n=s,libraries:a=[],language:l,region:c,version:h,mapIds:p,nonce:u,retries:d=3,url:g="https://maps.googleapis.com/maps/api/js"}){if(this.CALLBACK="__googleMapsCallback",this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.version=h,this.apiKey=t,this.channel=e,this.client=o,this.id=n||s,this.libraries=a,this.language=l,this.region=c,this.mapIds=p,this.nonce=u,this.retries=d,this.url=g,r.instance){if(!i(this.options,r.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(r.instance.options)}`);return r.instance}r.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url}}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let t=this.url;return t+=`?callback=${this.CALLBACK}`,this.apiKey&&(t+=`&key=${this.apiKey}`),this.channel&&(t+=`&channel=${this.channel}`),this.client&&(t+=`&client=${this.client}`),this.libraries.length>0&&(t+=`&libraries=${this.libraries.join(",")}`),this.language&&(t+=`&language=${this.language}`),this.region&&(t+=`&region=${this.region}`),this.version&&(t+=`&v=${this.version}`),this.mapIds&&(t+=`&map_ids=${this.mapIds.join(",")}`),t}load(){return this.loadPromise()}loadPromise(){return new Promise(((t,e)=>{this.loadCallback((i=>{i?e(i.error):t(window.google)}))}))}loadCallback(t){this.callbacks.push(t),this.execute()}setScript(){if(document.getElementById(this.id))return void this.callback();const t=this.createUrl(),e=document.createElement("script");e.id=this.id,e.type="text/javascript",e.src=t,e.onerror=this.loadErrorCallback.bind(this),e.defer=!0,e.async=!0,this.nonce&&(e.nonce=this.nonce),document.head.appendChild(e)}deleteScript(){const t=document.getElementById(this.id);t&&t.remove()}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(t){if(this.errors.push(t),this.errors.length<=this.retries){const t=this.errors.length*Math.pow(2,this.errors.length);console.log(`Failed to load Google Maps script, retrying in ${t} ms.`),setTimeout((()=>{this.deleteScript(),this.setScript()}),t)}else this.onerrorEvent=t,this.callback()}setCallback(){window.__googleMapsCallback=this.callback.bind(this)}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach((t=>{t(this.onerrorEvent)})),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version)return console.warn("Google Maps already loaded outside @googlemaps/js-api-loader.This may result in undesirable behavior as options and script parameters may not match."),void this.callback();this.loading||(this.loading=!0,this.setCallback(),this.setScript())}}}let n=new class{static getInstance(){return this.instance}constructor(){return this.instance||(this.instance=this,this.version=()=>"2.0.0",this.map={api:null,loader:null}),this.instance}setMapLoader(t){this.map.loader=new r(t)}loadGoogleMapCallback(t=(()=>{console.log("load")})){this.map.loader.loadCallback(t)}getGoogleApi(){return this.map.loader.load()}};Object.freeze(n);const a=n;var l=o(145),c=o.n(l);class h{constructor(t,e){this.$el=c()(t),this.$input=this.$el.find("input"),this.settings=e,this.autocomplete=null,this.fields=[],this.main()}main(){e().mapService.getGoogleApi().then((t=>{this.initAutocomplete(t),this.$input.on("keydown",(function(t){13===t.keyCode&&(t.preventDefault(),t.stopPropagation())}))})),this.initField()}initAutocomplete(t){this.autocomplete=new t.maps.places.Autocomplete(this.$input[0]),this.settings.options&&this.autocomplete.setOptions(this.settings.options),this.settings.countryLimit&&this.autocomplete.setComponentRestrictions({country:this.settings.countryLimit}),this.autocomplete.setTypes(this.settings.types),this.settings.useBrowserLocation&&this.geoLocate(),this.autocomplete.addListener("place_changed",(()=>{this.setInputsValue(this.autocomplete.getPlace())}))}initField(){let t;t=0===this.settings.fieldMap.length?this.getInputsField():this.getMappedFields(this.settings.fieldMap),this.fields=t.filter((t=>t.name!==this.$input.attr("name")))}geoLocate(){navigator.geolocation&&navigator.geolocation.getCurrentPosition((t=>{let e={lat:t.coords.latitude,lng:t.coords.longitude},i=new google.maps.Circle({center:e,radius:t.coords.accuracy});this.autocomplete.setBounds(i.getBounds())}))}setInputsValue(t){this.fields.forEach((t=>{t.input.val("")})),null!=t&&t.address_components?this.fields.forEach((e=>{e.input.val(this.getFieldValue(e.value,t))})):this.$input.val("")}getFieldValue(t,e){let i="";return t.def.forEach(((s,o)=>{i+="lat"===s.type||"lng"===s.type?this.getLatLngFromPlace(s,e):this.getAddressComponentFromPlace(s,e),o<t.def.length-1&&t.glue&&(i+=t.glue)})),i}getAddressComponentFromPlace(t,e){var i;const s=null===(i=e.address_components.filter((e=>e.types.includes(t.type)))[0])||void 0===i?void 0:i[t.prop];return s||""}getLatLngFromPlace(t,e){return e.geometry.location[t.type]()}getMappedFields(t){return t.map((t=>({input:this.$el.parents(this.settings.formSelector).find('input[name="'+t.name+'"]'),...t})))}getInputsField(){return Array.from(this.$el.parents(this.settings.formSelector).find("input"),(t=>({input:c()(t),name:c()(t).attr("name"),value:{def:[{type:c()(t).attr("name"),prop:this.settings.useLongName?"long_name":"short_name"}]}})))}}h.DEFAULTS={options:null,formSelector:"div.ui.form",types:["address"],useBrowserLocation:!0,countryLimit:null,useLongName:!0,fieldMap:[],glue:" "},void 0!==e()&&(e().registerPlugin("AddressLookup",h),e().mapService||(e().mapService=a))})(),r=r.default})()}));